module.exports=function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";var o=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(i,r){function s(e){try{a(o.next(e))}catch(e){r(e)}}function c(e){try{a(o.throw(e))}catch(e){r(e)}}function a(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,c)}a((o=o.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const i=n(1),r=n(2);t.activate=function(e){return o(this,void 0,void 0,(function*(){let t=void 0;const n=e.extensionPath;e.subscriptions.push(i.commands.registerCommand("zetcards.openCardPanel",()=>{var o;t?t.reveal(i.ViewColumn.One):(t=i.window.createWebviewPanel("cardPanel","ZetCards Dashboard",i.ViewColumn.One,{enableScripts:!0,localResourceRoots:[i.Uri.file(r.join(n,"dist")),i.Uri.file(r.join(n,"static"))]}),t.webview.html=function(e,t){const n=i.Uri.file(r.join(t,"dist","webview.js")),o=e.asWebviewUri(n),s=(i.Uri.file(r.join(t,"dist","main.css")).with({scheme:"vscode-resource"}),function(){let e="";const t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let n=0;n<32;n++)e+=t.charAt(Math.floor(Math.random()*t.length));return e}());return`<!DOCTYPE html>\n\t\t  <html lang="en">\n        <head>\n            <meta charset="UTF-8">\n            \x3c!--\n            Use a content security policy to only allow loading images from https or from our extension directory,\n            and only allow scripts that have a specific nonce.\n            --\x3e\n            <meta http-equiv="Content-Security-Policy" content="default-src 'none'; img-src ${e.cspSource} https:; script-src 'nonce-${s}';">\n            <meta name="viewport" content="width=device-width, initial-scale=1.0">\n            <title>Cat Coding</title>\n        </head>\n        <body>\n        <noscript>You need to enable JavaScript to run this app.</noscript>\n        <div id="root"></div>\n        <script  nonce="${s}">\n          const vscode = acquireVsCodeApi();\n        <\/script>\n          \n          <script nonce="${s}" src="${o}"><\/script>\n        </body>\n      </html>`}(t.webview,n),t.onDidDispose(()=>this.dispose(),null,this._disposables),t.onDidDispose(()=>{t=void 0},void 0,e.subscriptions),o={test:"testing"},t&&t.webview.postMessage(o),t.webview.onDidReceiveMessage(e=>{const t={add(){console.log("testing message passing")}}[e.command]||null;t&&t(e.data)},void 0,e.subscriptions))}))}))},t.deactivate=function(){}},function(e,t){e.exports=require("vscode")},function(e,t){e.exports=require("path")}]);